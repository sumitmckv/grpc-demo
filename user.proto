syntax = "proto3";

package user;

service User {
    // Unary RPC
    rpc getUser(UserRequest) returns (UserResponse) {}
    // Server streaming RPC
    rpc getUserStream(UserStreamRequest) returns (stream UserStreamResponse) {}
    // Client streaming RPC
    rpc addUsersStream(stream AddUsersRequest) returns (AddUsersResponse) {}
    // Bidirectional streaming RPC
    rpc chat(stream ChatMessage) returns (stream ChatMessage) {}
}

message UserRequest {
    int32 id = 1;
}

message UserStreamRequest {
    repeated int32 userIdList = 1;
}

message UserResponse {
    UserDetails user = 1; 
}

message UserStreamResponse {
    string response = 1;
}

message UserDetails {
    int32 id = 1;
    string email = 2;
    string name = 3;
}

message AddUsersRequest {
    string email = 1;
    string name = 2;
}

message AddUsersResponse {
    repeated UserDetails users = 1;
}

message ChatMessage {
    string message = 1;
}